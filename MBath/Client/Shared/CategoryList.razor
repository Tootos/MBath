@inject ICategorySrvc CategoryService
@inject IProductSrvc ProductService
@inject NavigationManager NavigationManager

@implements IDisposable

@if(CategoryService.Categories==null || CategoryService.Categories.Count == 0)
{
    <span>@CategoryService.Message</span>
}
else
{
    <ul class="list-unstyled" >
        @foreach(var category in CategoryService.Categories)
        {           
                <li class="media my-3" @onclick="@(()=>OnClickHandler(category))" >

                    <div class="media-img-body mr-2">
                        <img class="media-img" src="@category.ImgURL" alt="@category.Name" />
                    </div>
                    <div class="media-body">
                        <h4>@category.Name</h4>

                    </div>
                </li>                                      
        }

    </ul>
}

@code{
    protected override void OnInitialized()
    {
        CategoryService.CategoriesChanged += StateHasChanged;
    }    

    public void Dispose()
    {
        CategoryService.CategoriesChanged -= StateHasChanged;
    }


    private async Task OnClickHandler(Category category)
    {
        
        if (await CategoryService.HasProductsAsync(category.Id))
        {
            NavigationManager.NavigateTo("products/" + category.URL + "/1");
        }
        else
        {
            NavigationManager.NavigateTo(category.URL);
        }
        
    }
}
