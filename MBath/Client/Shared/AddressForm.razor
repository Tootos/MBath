@inject IAddressSrvc AddressService

@if (address==null)
{
    <span>You haven't made and order yet.</span>
    <button class="btn" @onclick="InitAddress">Add an address.</button>
}else if (!editAddress)
{
    <p>
        <span>@address.FirstName @address.LastName</span>
        <span>@address.Street </span>
        <span>@address.City @address.State @address.PostalCode</span>
        <span>@address.Country</span>
    </p>
    <button class="btn btn-primary" @onclick="EditAddress">Edit Information</button>
}
else
{
    <EditForm Model="address" OnSubmit="UpdateAddress">
        <div class="mb-3">
            <label for="firstname">First Name</label>
            <InputText id="firstname" @bind-Value="address.FirstName" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="lastname">Last Name</label>
            <InputText id="lastname" @bind-Value="address.LastName" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="street">Street</label>
            <InputText id="street" @bind-Value="address.Street" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="city">City</label>
            <InputText id="city" @bind-Value="address.City" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="state">State</label>
            <InputText id="state" @bind-Value="address.State" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="zip">ZIP/Postal Code</label>
            <InputText id="zip" @bind-Value="address.PostalCode" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="country">Country</label>
            <InputText id="country" @bind-Value="address.Country" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Save </button>
    </EditForm>
}



@code {
    Address address = null;
    bool editAddress = false;

    protected override async Task OnInitializedAsync()
    {
        address = await AddressService.GetAddressAsync();
    }

    protected async Task UpdateAddress()
    {
        editAddress = false;
        address = await AddressService.UpdateAddressAsync(address); 
    }

    private void InitAddress()
    {
        address = new Address();
        editAddress = true;
    }

    private void EditAddress() => editAddress = true;

}
