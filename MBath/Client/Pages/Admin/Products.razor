@page "/admin/products"
@inject IProductSrvc ProductService
@attribute [Authorize(Roles = "Admin")]
@inject NavigationManager NavigationManager

<h3>Products</h3>

@if (ProductService.AdminProducts == null)
{
    <span>Loading. . .</span>
}
else
{
    <button class="btn btn-primary float-end" @onclick="(()=>CreateProduct())">
        <i class="oi oi-plus"></i>Create new Product
    </button>
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Product</th>
                <th>Variant</th>
                <th>Price</th>
                <th>Visible</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="ProductService.AdminProducts" Context="product">
                <tr>
                    <td>
                        @if (!string.IsNullOrEmpty(product.ImgURL))
                        {
                            <img src="@product.ImgURL" />
                        }
                        else if(product.Images.Count>0)
                        {
                            <img src="@product.Images[0].Data" />
                        }
                    </td>
                    <td>
                    @foreach(var variant in product.ProductVariants)
                    {
                        <span>@variant.Variant.Name</span>

                        <br />
                    }
                    </td>
                    <td>
                        @foreach (var variant in product.ProductVariants)
                        {
                            <span>@variant.Price</span>

                            <br />

                        }
                    </td>
                    <td>@(product.Visible ? "✔️" : "")</td>

                    <td>
                        <button class="btn btn-primary" @onclick="(()=>EditProduct(product.Id))">
                            <i class="oi oi-pencil"></i>
                        </button>
                    </td>
                </tr>
                

            </Virtualize>

        </tbody>


    </table>
}

@code {
    Product editingProduct = null;

    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetAdminProductsAsync();
    }


    void EditProduct(int id)
    {
        NavigationManager.NavigateTo($"/admin/product/{id}");
    }

    void CreateProduct()
    {
        NavigationManager.NavigateTo("/admin/product/");

    }


}
